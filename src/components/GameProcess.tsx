import React from 'react';
import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import './GameProcess.css';

const GameProcess: React.FC = () => {
  const [ref, inView] = useInView({
    triggerOnce: true,
    threshold: 0.1
  });

  const steps = [
    {
      number: 1,
      title: "–ò–≥—Ä–∞",
      description: "–£–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –∑–∞–¥–∞—á–∏, —Ä–µ—à–∞–π—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π —Å–∏–º—É–ª—è—Ü–∏–∏.",
      icon: "üéÆ"
    },
    {
      number: 2,
      title: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
      description: "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–≤–æ–∏—Ö —Ä–µ—à–µ–Ω–∏–π –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.",
      icon: "üìä"
    },
    {
      number: 3,
      title: "–û–±—É—á–µ–Ω–∏–µ",
      description: "–ò–∑—É—á–∞–π—Ç–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫—É—é —á–∞—Å—Ç—å –ø–æ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É –∏ Agile –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è–º.",
      icon: "üìö"
    },
    {
      number: 4,
      title: "–ü—Ä–∞–∫—Ç–∏–∫–∞",
      description: "–û—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –≤ –∏–≥—Ä–µ, –ø–ª–∞–Ω–∏—Ä—É—è –∏ –≤—ã–ø–æ–ª–Ω—è—è 6 —Å–ø—Ä–∏–Ω—Ç–æ–≤.",
      icon: "üöÄ"
    }
  ];

  return (
    <section id="game-process" className="game-process section">
      <div className="container">
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="section-header"
        >
          <h2 className="section-title">–û–±—É—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∏–≥—Ä—É</h2>
          <p className="section-subtitle">
            –ù–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ —Å–æ—á–µ—Ç–∞–µ—Ç —Ç–µ–æ—Ä–∏—é –∏ –ø—Ä–∞–∫—Ç–∏–∫—É –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º –∏–≥—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          </p>
        </motion.div>

        <div className="game-process-content">
          <motion.div 
            className="game-process-image"
            initial={{ opacity: 0, x: -50 }}
            animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}
            transition={{ duration: 0.8 }}
          >
            <img 
              src="/images/game-process.png" 
              alt="–ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è" 
              className="img-fluid"
              onError={(e) => {
                const target = e.target as HTMLImageElement;
                target.src = "https://via.placeholder.com/500x600/3498db/ffffff?text=–ü—Ä–æ—Ü–µ—Å—Å+–æ–±—É—á–µ–Ω–∏—è";
              }}
            />
            <div className="image-decoration">
              <div className="decoration-shape"></div>
            </div>
          </motion.div>

          <div 
            className="process-steps"
            ref={ref}
          >
            {steps.map((step, index) => (
              <motion.div 
                key={index} 
                className="process-step"
                initial={{ opacity: 0, x: 50 }}
                animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}
                transition={{ duration: 0.6, delay: index * 0.2 }}
              >
                <div className="step-icon">{step.icon}</div>
                <div className="step-number">{step.number}</div>
                <div className="step-content">
                  <h3>{step.title}</h3>
                  <p>{step.description}</p>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default GameProcess; 